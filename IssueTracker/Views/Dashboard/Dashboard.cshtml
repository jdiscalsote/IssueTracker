@model IssueTracker.Models.DashboardModel
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<style>
    .selPeriod input {
        padding: 8px;
        font-size: 14px;
    }

    .btn-group button {
        color: #657c92;
        font-size: 14px;
        text-align: right;
        padding: 8px 20px;
        border: 1px solid #657c92;
    }
    .btn-group button:not(:nth-last-child(-n+2)) {
        border-radius: 0;
        border-right: none; /* Prevent double borders */
    }   
    .btn-group button.active {
        color: #fff;
        box-shadow: none;
        border-radius: 5px;
        background-color: #657c92;
    }

    .dashCard {
        color: #ffffff;
        margin: 0px;
        padding: 30px;
        font-size: 16px;
        border-radius: 5px;
        background-color: #657c92;
    }
    .dashCard i {
        color: #ffffff;
        font-size: 30px;
        align-content: center;
    }
    .dashCard .lblTitle {
        font-size: 20px;
        align-content: center;
    }
    .dashCard .lblCount {
        font-size: 30px;
        font-weight: 500;
        align-content: center;
    }

    .table tbody td,
    .table thead tr th {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .table tbody tr td {
        margin: 0px;
        padding: 10px;
        font-size: 12px;
        vertical-align: middle;
    }
    .table thead tr th {
        padding: 10px;
        font-size: 12px;
        font-weight: 600;
        vertical-align: middle
    }

    .ticketNumBtn {
        color: #657c92;
        font-weight: 500;
        text-decoration: none;
    }
</style>

<script>
    $(function () {
        const buttons = document.querySelectorAll('#myButtonGroup button');

        for (let i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener('click', function () {
                const selectedValue = this.value;
                //alert(selectedValue);
            });
        }

        $("#myButtonGroup").on("click", "button", function () {
            $("#myButtonGroup button").removeClass("active");
            $(this).addClass("active");
        });
    });
</script>

<div class="row">
    <div class="col-md-12">
        @Html.Raw(@ViewBag.Alert)
    </div>
</div>

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex">
            <h3 style="font-family: 'Times New Roman', Times, serif; align-content:center">Dashboard</h3>
        </div>

        <div class="d-flex">
            <div class="p-0">
                <img src="~/lib/img/profile-icon.png" class="img-fluid" width="50" alt="Profile Icon" />
            </div>
            <div class="p-2" style="align-content: center">
                <dl>
                    <dt style="font-size: 14px">@ViewBag.UserName</dt>
                    <dd class="small" style="font-size: 12px">@ViewBag.RoleName <span class="badge rounded-pill bg-success">Active</span></dd>
                </dl>
            </div>
        </div>
    </div>
    <!-- End Header -->

    <hr />

    <!-- Filter -->
    <div class="row mb-4">
        <div class="col-sm-3 col-md-3 col-lg-3 mb-3">
            <h6 class="text-muted">Select Period:</h6>
            <div class="d-flex justify-content-between gap-2 selPeriod">
                <input type="date" class="form-control" />
                <input type="date" class="form-control" />
            </div>
        </div>

        <div class="col-sm-6 col-md-6 col-lg-6">
            <h6 class="text-muted">Filter by:</h6>
            <div id="myButtonGroup" class="btn-group">
                @foreach (var item in Model.GroupButtonValues)
                {
                    if (item == Model.GroupButtonValues.First())
                    {
                        <button class="btn active" value="@item.Id">@item.Value</button>
                    }
                    else
                    {
                        <button class="btn" value="@item.Id">@item.Value</button>
                    }
                }
                @Html.HiddenFor(Model => Model.SelectedValue)
            </div>
        </div>
    </div>
    <!-- End Filter -->

    <div class="row mb-4">
        @foreach (var item in Model.GetDashTicketsTitle)
        {
            if (item.ID == 1)
            {
                <div class="col-md mb-3">
                    <div class="dashCard d-flex flex-row justify-content-between">
                        <i class="far fa-list-alt"></i>
                        <label class="lblTitle">@item.Title</label>
                        <label class="lblCount">@item.Count</label>
                    </div>
                </div>
            }
            else if (item.ID == 2)
            {
                <div class="col-md mb-3">
                    <div class="dashCard d-flex flex-row justify-content-between">
                        <i class="fas fa-play"></i>
                        <label class="lblTitle">@item.Title</label>
                        <label class="lblCount">@item.Count</label>
                    </div>
                </div>
            }
            else if (item.ID == 3)
            {
                <div class="col-md mb-3">
                    <div class="dashCard d-flex flex-row justify-content-between">
                        <i class="fas fa-check"></i>
                        <label class="lblTitle">@item.Title</label>
                        <label class="lblCount">@item.Count</label>
                    </div>
                </div>
            }
            else if (item.ID == 4)
            {
                <div class="col-md">
                    <div class="dashCard d-flex flex-row justify-content-between">
                        <i class="far fa-clock"></i>
                        <label class="lblTitle">@item.Title</label>
                        <label class="lblCount">@item.Count</label>
                    </div>
                </div>
            }
        }
    </div>

    <div class="row">
        <!-- Table -->
        <div class="col-sm-6 col-md-6 col-lg-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h6>My Open Tickets</h6>
                    <!-- Tickets Table -->
                    <form asp-action="Dashboard" asp-controller="Dashboard" method="post">
                        <div class="table-responsive pt-3">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th style="text-align: center">
                                            @Html.DisplayNameFor(modelTitle => modelTitle.TicketID)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(modelTitle => modelTitle.Subject)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(modelTitle => modelTitle.Category)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(modelTitle => modelTitle.Status)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(modelTitle => modelTitle.Priority)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.GetOpenTicketTable)
                                    {
                                        <tr>
                                            <td style="width: 13%; text-align: center">
                                                @Html.ActionLink(item.TicketID, "TicketDetails", "TicketDetails", new { ID = item.TicketID }, new { @class = "ticketNumBtn" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Subject)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Category)
                                            </td>
                                            <td style="text-align: center">
                                                @Html.DisplayFor(modelItem => item.Status)
                                            </td>
                                            <td style="text-align: center">
                                                @Html.DisplayFor(modelItem => item.Priority)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- End Table -->
        <!-- Chart -->
        <div class="col-sm-6 col-md-6 col-lg-6">
            <div class="card">
                <div class="card-body">
                    <div id="chartContainer" class="chartContainer" style="height: 400px; width: 100%"></div>

                    <script>
                        window.onload = function () {
                            var chart = new CanvasJS.Chart("chartContainer", {
                                theme: "light1", // "light1", "light2", "dark1", "dark2"
                                exportFileName: "Doughnut Chart",
                                exportEnabled: true,
                                animationEnabled: true,
                                title: {
                                    text: "Open Tickets by Priority",
                                    fontSize: 22,
                                    fontFamily: "Calibri",
                                    fontWeight: "bold"
                                },
                                subtitles: [{
                                    text: "Priority Breakdown",
                                    fontSize: 16,
                                    fontFamily: "Calibri",
                                    fontWeight: "normal"
                                }],
                                legend: {
                                    fontSize: 14,
                                    fontFamily: "calibri"
                                },
                                data: [{
                                    type: "doughnut",
                                    startAngle: 90,
                                    toolTipContent: "<b>{label}</b>: {y}",
                                    showInLegend: "true",
                                    legendText: "{label}",
                                    indexLabel: "{label} - {y}",
                                    indexLabelFontSize: 12,
                                    dataPoints: @Html.Raw(ViewBag.DataPoints)
                                }]
                            });
                            chart.render();
                        }
                    </script>
                </div>
            </div>
        </div>
        <!-- End Chart -->
    </div>
</div>